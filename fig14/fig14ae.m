clc;
clear;
close all;
tic;

% 

% parameters setting
tau_0 = 1;
N = 3;
j = 4;
G = 0.6*pi/tau_0;
Gamma = 0.3*pi/tau_0;
omega_x = 2*pi/tau_0;
omega_l = 2.4447807002616515;
omega_e = 0.5818*pi;
mu_1 = omega_x-0.5*omega_l;
mu_2 = omega_e+0.5*omega_l;
alpha = 0;
t_end = 500;


% Define time span for simulation in units of t (will scale later by Gamma)
tspan = [0, t_end/tau_0]; 

% Define initial condition (history function) 
history = @(t) [sqrt(0.8); sqrt(0.2)];

% Solve the DDE using ddesd solver
options = ddeset(RelTol=1e-4);  % adjust the tolerance when needed!
sol = ddesd(ddefunf(tau_0, Gamma, mu_1, mu_2, G, omega_l, N, alpha), ddelagsf(tau_0, N), history, tspan, options);

tf = t_end/tau_0;
t = linspace(0, tf, 1000);
y = deval(sol, t);

% Calculate the atomic excitation
Final_x = y(1,:).*conj(y(1,:));   
Final_e = y(2,:).*conj(y(2,:));   



% Cxt
eps=zeros(size(t)); 
omega_j = 1.9192; 
s_j = -1i*omega_j;
cx0 = sqrt(0.8);
ce0 = sqrt(0.2);
constant = cxtfun(tau_0,N,G,Gamma,omega_l,mu_1,mu_2,alpha,cx0,ce0,s_j);
for i=1:length(t)
    eps(i)=constant;
end  
Final_xeq = eps;

% Cet
eps=zeros(size(t)); 
omega_j = 1.9192; 
s_j = -1i*omega_j;
cx0 = sqrt(0.8);
ce0 = sqrt(0.2);
constant = cetfun(tau_0,N,G,Gamma,omega_l,mu_1,mu_2,alpha,cx0,ce0,s_j);
for i=1:length(t)
    eps(i)=constant;
end  
Final_eeq = eps;

% Plot the atomic excitation over t./tau_0
figure;
indxlist = t./tau_0;
plot(indxlist, Final_x, LineStyle="-", Color=[0.07,0.62,1.00], LineWidth=0.7)
hold on
plot(indxlist, Final_xeq, LineStyle="--", Color=[1.00,0.41,0.16], LineWidth=1)
xlim([0 t_end])
ylim([0 0.8])
xlabel('$t/\tau_0$', Interpreter='latex')
ylabel('$|C_{x}(t)|^2$', Interpreter='latex')
title('$G\tau_0 = 0.6\pi$', Interpreter='latex');
legend('$Eq. (8)$','$C_{x}(t)$ steady-state solution', Interpreter='latex')
grid on;

% 
axes2 = axes('Position',[0.442684063373718,0.398763534160967,0.259086672879776,0.21483771251932]);
hold(axes2,'on');
plot(indxlist, Final_x, LineStyle="-", Color=[0.07,0.62,1.00], LineWidth=0.7)
hold on
plot(indxlist, Final_xeq, LineStyle="--", Color=[1.00,0.41,0.16], LineWidth=1)
% 
xlim(axes2,[t_end-100 t_end]);
%
ylim(axes2,[0 3e-3]);
box(axes2,'on');
% 
set(axes2,'FontName','Times New Roman','FontSize',10,'LineWidth',1,...
    'PlotBoxAspectRatio',[2 1 1]);
hold(axes2,'off');

figure;
indxlist = t./tau_0;
plot(indxlist, Final_e, LineStyle="-", Color=[0.07,0.62,1.00], LineWidth=0.7)
hold on
plot(indxlist, Final_eeq, LineStyle="--", Color=[1.00,0.41,0.16], LineWidth=1)
xlim([0 t_end])
ylim([0 0.8])
xlabel('$t/\tau_0$', Interpreter='latex')
ylabel('$|C_{e}(t)|^2$', Interpreter='latex')
title('$G\tau_0 = 0.6\pi$', Interpreter='latex');
legend('$Eq. (9)$','$C_{e}(t)$ steady-state solution', Interpreter='latex')
grid on;
hold on

axes3 = axes('Position',[0.442684063373718,0.398763534160967,0.259086672879776,0.21483771251932]);
hold(axes3,'on');
plot(indxlist, Final_e, LineStyle="-", Color=[0.07,0.62,1.00], LineWidth=0.7)
hold on
plot(indxlist, Final_eeq, LineStyle="--", Color=[1.00,0.41,0.16], LineWidth=1)
% 
xlim(axes3,[t_end-100 t_end]);
% 
ylim(axes3,[0 3e-3]);
box(axes3,'on');
% 
set(axes3,'FontName','Times New Roman','FontSize',10,'LineWidth',1,...
    'PlotBoxAspectRatio',[2 1 1]);
hold(axes3,'off');


toc





%%%%%%%%%%%%%%%%%%%%%setting the deday differential equation%%%%%%%%%%%%%
function dxdtf = ddefunf(tau_0, Gamma, mu_1, mu_2, G, omega_l, N, alpha)

dxdtf = @ddefun;

function dxdt = ddefun(t,epsilon,Z)
%%%%%%%%
s1 = 0;
s2 = 0;
s3 = 0;
s4 = 0;

for m = 1:N
    t1 = -(Gamma/2).*epsilon(1);
    s1 = s1+t1;
end

for m = 2:N
    for n = 1:m-1
        count = (m-1)*(m-2)/2;       
        x = n+count;                 
        y = x+((N^2-N)/2);           
        t2 = -Gamma*cos(alpha*m-alpha*n)*Z(1,x)*exp(1i*omega_l*0.5*abs(m-n)*tau_0)*heaviside(t-abs(m-n)*tau_0);
        t4 = Gamma*cos(alpha*m-alpha*n)*Z(1,y)*exp(1i*omega_l*0.5*(m+n)*tau_0)*heaviside(t-(m+n)*tau_0);
        s2 = s2+t2;
        s4 = s4+t4;
    end
end

for m = 1:N 
    y1 = (N^2-N)+m;   
    t3 = (Gamma/2).*Z(1,y1).*heaviside(t-(2*m).*tau_0).*exp(1i.*0.5.*omega_l.*(2*m).*tau_0);
    s3 = s3+t3;
end

dxdt = [-1i*mu_1*epsilon(1)-1i*G*epsilon(2)+s1+s2+s3+s4;
        -1i*mu_2*epsilon(2)-1i*G*epsilon(1)];
end

end




%%%%%%%%%%%%% non constant delay%%%%%%%%%%%%%%%%%%%
function delayf = ddelagsf(tau_0,N)

delayf = @ddelags;

function delay = ddelags(t,epsilon)
delay = zeros([1 N^2]);
for m = 2:N
    for n = 1:m-1
        count = (m-1)*(m-2)/2;
        x = n+count;   
        y = x+((N^2-N)/2);           
        delay(1,x) = t-abs(m-n)*tau_0;   
        delay(1,y) = t-(m+n)*tau_0;      
    end
end

for m = (N^2-N)+1:(N^2-N)+N
        y1 = m;                          
        m1 = m-(N^2-N);
        delay(1,y1) = t-(2*m1)*tau_0;   
end

delay = delay';
end

end


%%%%%%%%%%%Cxt%%%%%%%%%%%%%
function result = cxtfun(tau0,N1,G,gamma,omegal,mu1,mu2,alpha,cx0,ce0,s)
    x1 = (sqrt(-1)*(-1)).*ce0.*G+cx0.*(sqrt(-1).*mu2+s);                      
    us1 = sqrt(-1).*mu1+s+(1/2).*gamma.*((-1).*exp(1).^((sqrt(-1)*(-1)).* ... 
  alpha.*((-1)+N1)+sqrt(-1).*omegal.*tau0+(-2).*N1.*s.*tau0).*(exp( ...
  1).^(s.*tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).*(2.*alpha+omegal.* ...
  tau0))).^(-1).*(exp(1).^(N1.*s.*tau0)+(-1).*exp(1).^((sqrt(-1)*( ...
  1/2)).*N1.*(2.*alpha+omegal.*tau0))).*((-1).*exp(1).^((sqrt(-1)*( ...
  1/2)).*omegal.*tau0)+exp(1).^(sqrt(-1).*alpha+s.*tau0)).^(-1).*(( ...
  -1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*omegal.*tau0)+exp(1).^(sqrt( ...
  -1).*alpha.*N1+N1.*s.*tau0))+(1/4).*exp(1).^((sqrt(-1)*(-1)).* ...
  alpha.*(1+N1)+(-1).*(sqrt(-1).*omegal+(2+N1).*s).*tau0).*(exp(1) ...
  .^((sqrt(-1)*(1/2)).*(4.*alpha.*(1+N1)+(omegal+N1.*omegal+(sqrt( ...
  -1)*(-6)).*s).*tau0))+exp(1).^((sqrt(-1)*(1/2)).*(4.*alpha.*N1+3.* ...
  omegal.*tau0+N1.*omegal.*tau0+(sqrt(-1)*(-2)).*s.*tau0))+exp(1).^( ...
  (sqrt(-1)*2).*alpha+(sqrt(-1)*(1/2)).*(3+N1).*omegal.*tau0+s.* ...
  tau0)+(-2).*exp(1).^(sqrt(-1).*alpha+(sqrt(-1)*(1/2)).*(2+N1).* ...
  omegal.*tau0+2.*s.*tau0)+(-2).*exp(1).^(sqrt(-1).*alpha.*(1+2.*N1) ...
  +(sqrt(-1)*(1/2)).*(2+N1).*omegal.*tau0+2.*s.*tau0)+exp(1).^(( ...
  sqrt(-1)*(1/2)).*(1+N1).*omegal.*tau0+3.*s.*tau0)+4.*exp(1).^( ...
  sqrt(-1).*alpha.*(1+N1)+sqrt(-1).*omegal.*tau0+(2+N1).*s.*tau0)+ ...
  exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(3/2)).*omegal.*tau0+s.* ...
  tau0+N1.*s.*tau0).*((-1)+N1)+exp(1).^(sqrt(-1).*alpha.*(2+N1)+( ...
  sqrt(-1)*(3/2)).*omegal.*tau0+(1+N1).*s.*tau0).*((-1)+N1)+exp(1) ...
  .^(sqrt(-1).*alpha.*(1+N1)+(4+N1).*s.*tau0).*N1+(-1).*exp(1).^( ...
  sqrt(-1).*alpha.*(1+N1)+((sqrt(-1)*2).*omegal+N1.*s).*tau0).*N1+( ...
  -1).*exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(1/2)).*omegal.*tau0+ ...
  3.*s.*tau0+N1.*s.*tau0).*(1+N1)+(-1).*exp(1).^(sqrt(-1).*alpha.*( ...
  2+N1)+(sqrt(-1)*(1/2)).*omegal.*tau0+(3+N1).*s.*tau0).*(1+N1)).*( ...
  cos(alpha)+(-1).*cos((1/2).*omegal.*tau0+sqrt(-1).*s.*tau0)).^(-2) ...
  )+(sqrt(-1).*mu2+s).*(1+(1/2).*gamma.*(exp(1).^(sqrt(-1).*alpha+( ...
  sqrt(-1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).*omegal.*tau0+s.*tau0+( ...
  -2).*N1.*s.*tau0).*(exp(1).^(s.*tau0)+(-1).*exp(1).^((sqrt(-1)*( ...
  1/2)).*(2.*alpha+omegal.*tau0))).^(-1).*(exp(1).^(N1.*s.*tau0)+( ...
  -1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*(2.*alpha+omegal.*tau0))).*(( ...
  -1).*exp(1).^((sqrt(-1)*(1/2)).*omegal.*tau0)+exp(1).^(sqrt(-1).* ...
  alpha+s.*tau0)).^(-2).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.* ...
  omegal.*tau0)+exp(1).^(sqrt(-1).*alpha.*N1+N1.*s.*tau0)).*tau0+ ...
  exp(1).^((sqrt(-1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).*omegal.*tau0+ ...
  s.*tau0+(-2).*N1.*s.*tau0).*(exp(1).^(s.*tau0)+(-1).*exp(1).^(( ...
  sqrt(-1)*(1/2)).*(2.*alpha+omegal.*tau0))).^(-2).*(exp(1).^(N1.* ...
  s.*tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*(2.*alpha+omegal.* ...
  tau0))).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*omegal.*tau0)+exp(1).^( ...
  sqrt(-1).*alpha+s.*tau0)).^(-1).*((-1).*exp(1).^((sqrt(-1)*(1/2)) ...
  .*N1.*omegal.*tau0)+exp(1).^(sqrt(-1).*alpha.*N1+N1.*s.*tau0)).* ...
  tau0+(-1).*exp(1).^((sqrt(-1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).* ...
  alpha.*N1+sqrt(-1).*omegal.*tau0+(-1).*N1.*s.*tau0).*(exp(1).^(s.* ...
  tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).*(2.*alpha+omegal.*tau0))) ...
  .^(-1).*(exp(1).^(N1.*s.*tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).* ...
  N1.*(2.*alpha+omegal.*tau0))).*((-1).*exp(1).^((sqrt(-1)*(1/2)).* ...
  omegal.*tau0)+exp(1).^(sqrt(-1).*alpha+s.*tau0)).^(-1).*N1.*tau0+( ...
  -1).*exp(1).^((sqrt(-1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).*omegal.* ...
  tau0+(-1).*N1.*s.*tau0).*(exp(1).^(s.*tau0)+(-1).*exp(1).^((sqrt( ...
  -1)*(1/2)).*(2.*alpha+omegal.*tau0))).^(-1).*((-1).*exp(1).^(( ...
  sqrt(-1)*(1/2)).*omegal.*tau0)+exp(1).^(sqrt(-1).*alpha+s.*tau0)) ...
  .^(-1).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*omegal.*tau0)+exp(1) ...
  .^(sqrt(-1).*alpha.*N1+N1.*s.*tau0)).*N1.*tau0+2.*exp(1).^((sqrt( ...
  -1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).*omegal.*tau0+(-2).*N1.*s.* ...
  tau0).*(exp(1).^(s.*tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).*(2.* ...
  alpha+omegal.*tau0))).^(-1).*(exp(1).^(N1.*s.*tau0)+(-1).*exp(1) ...
  .^((sqrt(-1)*(1/2)).*N1.*(2.*alpha+omegal.*tau0))).*((-1).*exp(1) ...
  .^((sqrt(-1)*(1/2)).*omegal.*tau0)+exp(1).^(sqrt(-1).*alpha+s.* ...
  tau0)).^(-1).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*omegal.*tau0)+ ...
  exp(1).^(sqrt(-1).*alpha.*N1+N1.*s.*tau0)).*N1.*tau0+(-1/4).*exp( ...
  1).^((sqrt(-1)*(-1)).*alpha.*(1+N1)+(-1).*(sqrt(-1).*omegal+(2+N1) ...
  .*s).*tau0).*(2+N1).*(exp(1).^((sqrt(-1)*(1/2)).*(4.*alpha.*(1+N1) ...
  +(omegal+N1.*omegal+(sqrt(-1)*(-6)).*s).*tau0))+exp(1).^((sqrt(-1) ...
  *(1/2)).*(4.*alpha.*N1+3.*omegal.*tau0+N1.*omegal.*tau0+(sqrt(-1)* ...
  (-2)).*s.*tau0))+exp(1).^((sqrt(-1)*2).*alpha+(sqrt(-1)*(1/2)).*( ...
  3+N1).*omegal.*tau0+s.*tau0)+(-2).*exp(1).^(sqrt(-1).*alpha+(sqrt( ...
  -1)*(1/2)).*(2+N1).*omegal.*tau0+2.*s.*tau0)+(-2).*exp(1).^(sqrt( ...
  -1).*alpha.*(1+2.*N1)+(sqrt(-1)*(1/2)).*(2+N1).*omegal.*tau0+2.* ...
  s.*tau0)+exp(1).^((sqrt(-1)*(1/2)).*(1+N1).*omegal.*tau0+3.*s.* ...
  tau0)+4.*exp(1).^(sqrt(-1).*alpha.*(1+N1)+sqrt(-1).*omegal.*tau0+( ...
  2+N1).*s.*tau0)+exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(3/2)).* ...
  omegal.*tau0+s.*tau0+N1.*s.*tau0).*((-1)+N1)+exp(1).^(sqrt(-1).* ...
  alpha.*(2+N1)+(sqrt(-1)*(3/2)).*omegal.*tau0+(1+N1).*s.*tau0).*(( ...
  -1)+N1)+exp(1).^(sqrt(-1).*alpha.*(1+N1)+(4+N1).*s.*tau0).*N1+(-1) ...
  .*exp(1).^(sqrt(-1).*alpha.*(1+N1)+((sqrt(-1)*2).*omegal+N1.*s).* ...
  tau0).*N1+(-1).*exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(1/2)).* ...
  omegal.*tau0+3.*s.*tau0+N1.*s.*tau0).*(1+N1)+(-1).*exp(1).^(sqrt( ...
  -1).*alpha.*(2+N1)+(sqrt(-1)*(1/2)).*omegal.*tau0+(3+N1).*s.*tau0) ...
  .*(1+N1)).*tau0.*(cos(alpha)+(-1).*cos((1/2).*omegal.*tau0+sqrt( ...
  -1).*s.*tau0)).^(-2)+(1/4).*exp(1).^((sqrt(-1)*(-1)).*alpha.*(1+ ...
  N1)+(-1).*(sqrt(-1).*omegal+(2+N1).*s).*tau0).*(3.*exp(1).^((sqrt( ...
  -1)*(1/2)).*(4.*alpha.*(1+N1)+(omegal+N1.*omegal+(sqrt(-1)*(-6)).* ...
  s).*tau0)).*tau0+exp(1).^((sqrt(-1)*(1/2)).*(4.*alpha.*N1+3.* ...
  omegal.*tau0+N1.*omegal.*tau0+(sqrt(-1)*(-2)).*s.*tau0)).*tau0+ ...
  exp(1).^((sqrt(-1)*2).*alpha+(sqrt(-1)*(1/2)).*(3+N1).*omegal.* ...
  tau0+s.*tau0).*tau0+(-4).*exp(1).^(sqrt(-1).*alpha+(sqrt(-1)*(1/2) ...
  ).*(2+N1).*omegal.*tau0+2.*s.*tau0).*tau0+(-4).*exp(1).^(sqrt(-1) ...
  .*alpha.*(1+2.*N1)+(sqrt(-1)*(1/2)).*(2+N1).*omegal.*tau0+2.*s.* ...
  tau0).*tau0+3.*exp(1).^((sqrt(-1)*(1/2)).*(1+N1).*omegal.*tau0+3.* ...
  s.*tau0).*tau0+(-1).*exp(1).^(sqrt(-1).*alpha.*(1+N1)+((sqrt(-1)* ...
  2).*omegal+N1.*s).*tau0).*N1.^2.*tau0+exp(1).^(sqrt(-1).*alpha.*( ...
  2+N1)+(sqrt(-1)*(3/2)).*omegal.*tau0+(1+N1).*s.*tau0).*((-1)+N1).* ...
  (1+N1).*tau0+4.*exp(1).^(sqrt(-1).*alpha.*(1+N1)+sqrt(-1).* ...
  omegal.*tau0+(2+N1).*s.*tau0).*(2+N1).*tau0+(-1).*exp(1).^(sqrt( ...
  -1).*alpha.*(2+N1)+(sqrt(-1)*(1/2)).*omegal.*tau0+(3+N1).*s.*tau0) ...
  .*(1+N1).*(3+N1).*tau0+exp(1).^(sqrt(-1).*alpha.*(1+N1)+(4+N1).* ...
  s.*tau0).*N1.*(4+N1).*tau0+exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)* ...
  (3/2)).*omegal.*tau0+s.*tau0+N1.*s.*tau0).*((-1)+N1).*(tau0+N1.* ...
  tau0)+(-1).*exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(1/2)).* ...
  omegal.*tau0+3.*s.*tau0+N1.*s.*tau0).*(1+N1).*(3.*tau0+N1.*tau0)) ...
  .*(cos(alpha)+(-1).*cos((1/2).*omegal.*tau0+sqrt(-1).*s.*tau0)).^( ...
  -2)+(sqrt(-1)*(-1/2)).*exp(1).^((sqrt(-1)*(-1)).*alpha.*(1+N1)+( ...
  -1).*(sqrt(-1).*omegal+(2+N1).*s).*tau0).*(exp(1).^((sqrt(-1)*( ...
  1/2)).*(4.*alpha.*(1+N1)+(omegal+N1.*omegal+(sqrt(-1)*(-6)).*s).* ...
  tau0))+exp(1).^((sqrt(-1)*(1/2)).*(4.*alpha.*N1+3.*omegal.*tau0+ ...
  N1.*omegal.*tau0+(sqrt(-1)*(-2)).*s.*tau0))+exp(1).^((sqrt(-1)*2) ...
  .*alpha+(sqrt(-1)*(1/2)).*(3+N1).*omegal.*tau0+s.*tau0)+(-2).*exp( ...
  1).^(sqrt(-1).*alpha+(sqrt(-1)*(1/2)).*(2+N1).*omegal.*tau0+2.*s.* ...
  tau0)+(-2).*exp(1).^(sqrt(-1).*alpha.*(1+2.*N1)+(sqrt(-1)*(1/2)).* ...
  (2+N1).*omegal.*tau0+2.*s.*tau0)+exp(1).^((sqrt(-1)*(1/2)).*(1+N1) ...
  .*omegal.*tau0+3.*s.*tau0)+4.*exp(1).^(sqrt(-1).*alpha.*(1+N1)+ ...
  sqrt(-1).*omegal.*tau0+(2+N1).*s.*tau0)+exp(1).^(sqrt(-1).*alpha.* ...
  N1+(sqrt(-1)*(3/2)).*omegal.*tau0+s.*tau0+N1.*s.*tau0).*((-1)+N1)+ ...
  exp(1).^(sqrt(-1).*alpha.*(2+N1)+(sqrt(-1)*(3/2)).*omegal.*tau0+( ...
  1+N1).*s.*tau0).*((-1)+N1)+exp(1).^(sqrt(-1).*alpha.*(1+N1)+(4+N1) ...
  .*s.*tau0).*N1+(-1).*exp(1).^(sqrt(-1).*alpha.*(1+N1)+((sqrt(-1)* ...
  2).*omegal+N1.*s).*tau0).*N1+(-1).*exp(1).^(sqrt(-1).*alpha.*N1+( ...
  sqrt(-1)*(1/2)).*omegal.*tau0+3.*s.*tau0+N1.*s.*tau0).*(1+N1)+(-1) ...
  .*exp(1).^(sqrt(-1).*alpha.*(2+N1)+(sqrt(-1)*(1/2)).*omegal.*tau0+ ...
  (3+N1).*s.*tau0).*(1+N1)).*tau0.*(cos(alpha)+(-1).*cos((1/2).* ...
  omegal.*tau0+sqrt(-1).*s.*tau0)).^(-3).*sin((1/2).*omegal.*tau0+ ...
  sqrt(-1).*s.*tau0)));
    result = abs(x1./us1)^2;
end

%%%%%%%%%%%Cet%%%%%%%%%%%%%
function result = cetfun(tau0,N1,G,gamma,omegal,mu1,mu2,alpha,cx0,ce0,s)
    x1 = (sqrt(-1)*(-1)).*cx0.*G+ce0.*(sqrt(-1).*mu1+s+(1/2).*gamma.*((-1) ...  
  .*exp(1).^((sqrt(-1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).*omegal.* ...           
  tau0+(-2).*N1.*s.*tau0).*(exp(1).^(s.*tau0)+(-1).*exp(1).^((sqrt( ...
  -1)*(1/2)).*(2.*alpha+omegal.*tau0))).^(-1).*(exp(1).^(N1.*s.* ...
  tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*(2.*alpha+omegal.*tau0) ...
  )).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*omegal.*tau0)+exp(1).^(sqrt( ...
  -1).*alpha+s.*tau0)).^(-1).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.* ...
  omegal.*tau0)+exp(1).^(sqrt(-1).*alpha.*N1+N1.*s.*tau0))+(1/4).* ...
  exp(1).^((sqrt(-1)*(-1)).*alpha.*(1+N1)+(-1).*(sqrt(-1).*omegal+( ...
  2+N1).*s).*tau0).*(exp(1).^((sqrt(-1)*(1/2)).*(4.*alpha.*(1+N1)+( ...
  omegal+N1.*omegal+(sqrt(-1)*(-6)).*s).*tau0))+exp(1).^((sqrt(-1)*( ...
  1/2)).*(4.*alpha.*N1+3.*omegal.*tau0+N1.*omegal.*tau0+(sqrt(-1)*( ...
  -2)).*s.*tau0))+exp(1).^((sqrt(-1)*2).*alpha+(sqrt(-1)*(1/2)).*(3+ ...
  N1).*omegal.*tau0+s.*tau0)+(-2).*exp(1).^(sqrt(-1).*alpha+(sqrt( ...
  -1)*(1/2)).*(2+N1).*omegal.*tau0+2.*s.*tau0)+(-2).*exp(1).^(sqrt( ...
  -1).*alpha.*(1+2.*N1)+(sqrt(-1)*(1/2)).*(2+N1).*omegal.*tau0+2.* ...
  s.*tau0)+exp(1).^((sqrt(-1)*(1/2)).*(1+N1).*omegal.*tau0+3.*s.* ...
  tau0)+4.*exp(1).^(sqrt(-1).*alpha.*(1+N1)+sqrt(-1).*omegal.*tau0+( ...
  2+N1).*s.*tau0)+exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(3/2)).* ...
  omegal.*tau0+s.*tau0+N1.*s.*tau0).*((-1)+N1)+exp(1).^(sqrt(-1).* ...
  alpha.*(2+N1)+(sqrt(-1)*(3/2)).*omegal.*tau0+(1+N1).*s.*tau0).*(( ...
  -1)+N1)+exp(1).^(sqrt(-1).*alpha.*(1+N1)+(4+N1).*s.*tau0).*N1+(-1) ...
  .*exp(1).^(sqrt(-1).*alpha.*(1+N1)+((sqrt(-1)*2).*omegal+N1.*s).* ...
  tau0).*N1+(-1).*exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(1/2)).* ...
  omegal.*tau0+3.*s.*tau0+N1.*s.*tau0).*(1+N1)+(-1).*exp(1).^(sqrt( ...
  -1).*alpha.*(2+N1)+(sqrt(-1)*(1/2)).*omegal.*tau0+(3+N1).*s.*tau0) ...
  .*(1+N1)).*(cos(alpha)+(-1).*cos((1/2).*omegal.*tau0+sqrt(-1).*s.* ...
  tau0)).^(-2)));
    us1 = sqrt(-1).*mu1+s+(1/2).*gamma.*((-1).*exp(1).^((sqrt(-1)*(-1)).* ...
  alpha.*((-1)+N1)+sqrt(-1).*omegal.*tau0+(-2).*N1.*s.*tau0).*(exp( ...
  1).^(s.*tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).*(2.*alpha+omegal.* ...
  tau0))).^(-1).*(exp(1).^(N1.*s.*tau0)+(-1).*exp(1).^((sqrt(-1)*( ...
  1/2)).*N1.*(2.*alpha+omegal.*tau0))).*((-1).*exp(1).^((sqrt(-1)*( ...
  1/2)).*omegal.*tau0)+exp(1).^(sqrt(-1).*alpha+s.*tau0)).^(-1).*(( ...
  -1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*omegal.*tau0)+exp(1).^(sqrt( ...
  -1).*alpha.*N1+N1.*s.*tau0))+(1/4).*exp(1).^((sqrt(-1)*(-1)).* ...
  alpha.*(1+N1)+(-1).*(sqrt(-1).*omegal+(2+N1).*s).*tau0).*(exp(1) ...
  .^((sqrt(-1)*(1/2)).*(4.*alpha.*(1+N1)+(omegal+N1.*omegal+(sqrt( ...
  -1)*(-6)).*s).*tau0))+exp(1).^((sqrt(-1)*(1/2)).*(4.*alpha.*N1+3.* ...
  omegal.*tau0+N1.*omegal.*tau0+(sqrt(-1)*(-2)).*s.*tau0))+exp(1).^( ...
  (sqrt(-1)*2).*alpha+(sqrt(-1)*(1/2)).*(3+N1).*omegal.*tau0+s.* ...
  tau0)+(-2).*exp(1).^(sqrt(-1).*alpha+(sqrt(-1)*(1/2)).*(2+N1).* ...
  omegal.*tau0+2.*s.*tau0)+(-2).*exp(1).^(sqrt(-1).*alpha.*(1+2.*N1) ...
  +(sqrt(-1)*(1/2)).*(2+N1).*omegal.*tau0+2.*s.*tau0)+exp(1).^(( ...
  sqrt(-1)*(1/2)).*(1+N1).*omegal.*tau0+3.*s.*tau0)+4.*exp(1).^( ...
  sqrt(-1).*alpha.*(1+N1)+sqrt(-1).*omegal.*tau0+(2+N1).*s.*tau0)+ ...
  exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(3/2)).*omegal.*tau0+s.* ...
  tau0+N1.*s.*tau0).*((-1)+N1)+exp(1).^(sqrt(-1).*alpha.*(2+N1)+( ...
  sqrt(-1)*(3/2)).*omegal.*tau0+(1+N1).*s.*tau0).*((-1)+N1)+exp(1) ...
  .^(sqrt(-1).*alpha.*(1+N1)+(4+N1).*s.*tau0).*N1+(-1).*exp(1).^( ...
  sqrt(-1).*alpha.*(1+N1)+((sqrt(-1)*2).*omegal+N1.*s).*tau0).*N1+( ...
  -1).*exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(1/2)).*omegal.*tau0+ ...
  3.*s.*tau0+N1.*s.*tau0).*(1+N1)+(-1).*exp(1).^(sqrt(-1).*alpha.*( ...
  2+N1)+(sqrt(-1)*(1/2)).*omegal.*tau0+(3+N1).*s.*tau0).*(1+N1)).*( ...
  cos(alpha)+(-1).*cos((1/2).*omegal.*tau0+sqrt(-1).*s.*tau0)).^(-2) ...
  )+(sqrt(-1).*mu2+s).*(1+(1/2).*gamma.*(exp(1).^(sqrt(-1).*alpha+( ...
  sqrt(-1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).*omegal.*tau0+s.*tau0+( ...
  -2).*N1.*s.*tau0).*(exp(1).^(s.*tau0)+(-1).*exp(1).^((sqrt(-1)*( ...
  1/2)).*(2.*alpha+omegal.*tau0))).^(-1).*(exp(1).^(N1.*s.*tau0)+( ...
  -1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*(2.*alpha+omegal.*tau0))).*(( ...
  -1).*exp(1).^((sqrt(-1)*(1/2)).*omegal.*tau0)+exp(1).^(sqrt(-1).* ...
  alpha+s.*tau0)).^(-2).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.* ...
  omegal.*tau0)+exp(1).^(sqrt(-1).*alpha.*N1+N1.*s.*tau0)).*tau0+ ...
  exp(1).^((sqrt(-1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).*omegal.*tau0+ ...
  s.*tau0+(-2).*N1.*s.*tau0).*(exp(1).^(s.*tau0)+(-1).*exp(1).^(( ...
  sqrt(-1)*(1/2)).*(2.*alpha+omegal.*tau0))).^(-2).*(exp(1).^(N1.* ...
  s.*tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*(2.*alpha+omegal.* ...
  tau0))).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*omegal.*tau0)+exp(1).^( ...
  sqrt(-1).*alpha+s.*tau0)).^(-1).*((-1).*exp(1).^((sqrt(-1)*(1/2)) ...
  .*N1.*omegal.*tau0)+exp(1).^(sqrt(-1).*alpha.*N1+N1.*s.*tau0)).* ...
  tau0+(-1).*exp(1).^((sqrt(-1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).* ...
  alpha.*N1+sqrt(-1).*omegal.*tau0+(-1).*N1.*s.*tau0).*(exp(1).^(s.* ...
  tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).*(2.*alpha+omegal.*tau0))) ...
  .^(-1).*(exp(1).^(N1.*s.*tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).* ...
  N1.*(2.*alpha+omegal.*tau0))).*((-1).*exp(1).^((sqrt(-1)*(1/2)).* ...
  omegal.*tau0)+exp(1).^(sqrt(-1).*alpha+s.*tau0)).^(-1).*N1.*tau0+( ...
  -1).*exp(1).^((sqrt(-1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).*omegal.* ...
  tau0+(-1).*N1.*s.*tau0).*(exp(1).^(s.*tau0)+(-1).*exp(1).^((sqrt( ...
  -1)*(1/2)).*(2.*alpha+omegal.*tau0))).^(-1).*((-1).*exp(1).^(( ...
  sqrt(-1)*(1/2)).*omegal.*tau0)+exp(1).^(sqrt(-1).*alpha+s.*tau0)) ...
  .^(-1).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*omegal.*tau0)+exp(1) ...
  .^(sqrt(-1).*alpha.*N1+N1.*s.*tau0)).*N1.*tau0+2.*exp(1).^((sqrt( ...
  -1)*(-1)).*alpha.*((-1)+N1)+sqrt(-1).*omegal.*tau0+(-2).*N1.*s.* ...
  tau0).*(exp(1).^(s.*tau0)+(-1).*exp(1).^((sqrt(-1)*(1/2)).*(2.* ...
  alpha+omegal.*tau0))).^(-1).*(exp(1).^(N1.*s.*tau0)+(-1).*exp(1) ...
  .^((sqrt(-1)*(1/2)).*N1.*(2.*alpha+omegal.*tau0))).*((-1).*exp(1) ...
  .^((sqrt(-1)*(1/2)).*omegal.*tau0)+exp(1).^(sqrt(-1).*alpha+s.* ...
  tau0)).^(-1).*((-1).*exp(1).^((sqrt(-1)*(1/2)).*N1.*omegal.*tau0)+ ...
  exp(1).^(sqrt(-1).*alpha.*N1+N1.*s.*tau0)).*N1.*tau0+(-1/4).*exp( ...
  1).^((sqrt(-1)*(-1)).*alpha.*(1+N1)+(-1).*(sqrt(-1).*omegal+(2+N1) ...
  .*s).*tau0).*(2+N1).*(exp(1).^((sqrt(-1)*(1/2)).*(4.*alpha.*(1+N1) ...
  +(omegal+N1.*omegal+(sqrt(-1)*(-6)).*s).*tau0))+exp(1).^((sqrt(-1) ...
  *(1/2)).*(4.*alpha.*N1+3.*omegal.*tau0+N1.*omegal.*tau0+(sqrt(-1)* ...
  (-2)).*s.*tau0))+exp(1).^((sqrt(-1)*2).*alpha+(sqrt(-1)*(1/2)).*( ...
  3+N1).*omegal.*tau0+s.*tau0)+(-2).*exp(1).^(sqrt(-1).*alpha+(sqrt( ...
  -1)*(1/2)).*(2+N1).*omegal.*tau0+2.*s.*tau0)+(-2).*exp(1).^(sqrt( ...
  -1).*alpha.*(1+2.*N1)+(sqrt(-1)*(1/2)).*(2+N1).*omegal.*tau0+2.* ...
  s.*tau0)+exp(1).^((sqrt(-1)*(1/2)).*(1+N1).*omegal.*tau0+3.*s.* ...
  tau0)+4.*exp(1).^(sqrt(-1).*alpha.*(1+N1)+sqrt(-1).*omegal.*tau0+( ...
  2+N1).*s.*tau0)+exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(3/2)).* ...
  omegal.*tau0+s.*tau0+N1.*s.*tau0).*((-1)+N1)+exp(1).^(sqrt(-1).* ...
  alpha.*(2+N1)+(sqrt(-1)*(3/2)).*omegal.*tau0+(1+N1).*s.*tau0).*(( ...
  -1)+N1)+exp(1).^(sqrt(-1).*alpha.*(1+N1)+(4+N1).*s.*tau0).*N1+(-1) ...
  .*exp(1).^(sqrt(-1).*alpha.*(1+N1)+((sqrt(-1)*2).*omegal+N1.*s).* ...
  tau0).*N1+(-1).*exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(1/2)).* ...
  omegal.*tau0+3.*s.*tau0+N1.*s.*tau0).*(1+N1)+(-1).*exp(1).^(sqrt( ...
  -1).*alpha.*(2+N1)+(sqrt(-1)*(1/2)).*omegal.*tau0+(3+N1).*s.*tau0) ...
  .*(1+N1)).*tau0.*(cos(alpha)+(-1).*cos((1/2).*omegal.*tau0+sqrt( ...
  -1).*s.*tau0)).^(-2)+(1/4).*exp(1).^((sqrt(-1)*(-1)).*alpha.*(1+ ...
  N1)+(-1).*(sqrt(-1).*omegal+(2+N1).*s).*tau0).*(3.*exp(1).^((sqrt( ...
  -1)*(1/2)).*(4.*alpha.*(1+N1)+(omegal+N1.*omegal+(sqrt(-1)*(-6)).* ...
  s).*tau0)).*tau0+exp(1).^((sqrt(-1)*(1/2)).*(4.*alpha.*N1+3.* ...
  omegal.*tau0+N1.*omegal.*tau0+(sqrt(-1)*(-2)).*s.*tau0)).*tau0+ ...
  exp(1).^((sqrt(-1)*2).*alpha+(sqrt(-1)*(1/2)).*(3+N1).*omegal.* ...
  tau0+s.*tau0).*tau0+(-4).*exp(1).^(sqrt(-1).*alpha+(sqrt(-1)*(1/2) ...
  ).*(2+N1).*omegal.*tau0+2.*s.*tau0).*tau0+(-4).*exp(1).^(sqrt(-1) ...
  .*alpha.*(1+2.*N1)+(sqrt(-1)*(1/2)).*(2+N1).*omegal.*tau0+2.*s.* ...
  tau0).*tau0+3.*exp(1).^((sqrt(-1)*(1/2)).*(1+N1).*omegal.*tau0+3.* ...
  s.*tau0).*tau0+(-1).*exp(1).^(sqrt(-1).*alpha.*(1+N1)+((sqrt(-1)* ...
  2).*omegal+N1.*s).*tau0).*N1.^2.*tau0+exp(1).^(sqrt(-1).*alpha.*( ...
  2+N1)+(sqrt(-1)*(3/2)).*omegal.*tau0+(1+N1).*s.*tau0).*((-1)+N1).* ...
  (1+N1).*tau0+4.*exp(1).^(sqrt(-1).*alpha.*(1+N1)+sqrt(-1).* ...
  omegal.*tau0+(2+N1).*s.*tau0).*(2+N1).*tau0+(-1).*exp(1).^(sqrt( ...
  -1).*alpha.*(2+N1)+(sqrt(-1)*(1/2)).*omegal.*tau0+(3+N1).*s.*tau0) ...
  .*(1+N1).*(3+N1).*tau0+exp(1).^(sqrt(-1).*alpha.*(1+N1)+(4+N1).* ...
  s.*tau0).*N1.*(4+N1).*tau0+exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)* ...
  (3/2)).*omegal.*tau0+s.*tau0+N1.*s.*tau0).*((-1)+N1).*(tau0+N1.* ...
  tau0)+(-1).*exp(1).^(sqrt(-1).*alpha.*N1+(sqrt(-1)*(1/2)).* ...
  omegal.*tau0+3.*s.*tau0+N1.*s.*tau0).*(1+N1).*(3.*tau0+N1.*tau0)) ...
  .*(cos(alpha)+(-1).*cos((1/2).*omegal.*tau0+sqrt(-1).*s.*tau0)).^( ...
  -2)+(sqrt(-1)*(-1/2)).*exp(1).^((sqrt(-1)*(-1)).*alpha.*(1+N1)+( ...
  -1).*(sqrt(-1).*omegal+(2+N1).*s).*tau0).*(exp(1).^((sqrt(-1)*( ...
  1/2)).*(4.*alpha.*(1+N1)+(omegal+N1.*omegal+(sqrt(-1)*(-6)).*s).* ...
  tau0))+exp(1).^((sqrt(-1)*(1/2)).*(4.*alpha.*N1+3.*omegal.*tau0+ ...
  N1.*omegal.*tau0+(sqrt(-1)*(-2)).*s.*tau0))+exp(1).^((sqrt(-1)*2) ...
  .*alpha+(sqrt(-1)*(1/2)).*(3+N1).*omegal.*tau0+s.*tau0)+(-2).*exp( ...
  1).^(sqrt(-1).*alpha+(sqrt(-1)*(1/2)).*(2+N1).*omegal.*tau0+2.*s.* ...
  tau0)+(-2).*exp(1).^(sqrt(-1).*alpha.*(1+2.*N1)+(sqrt(-1)*(1/2)).* ...
  (2+N1).*omegal.*tau0+2.*s.*tau0)+exp(1).^((sqrt(-1)*(1/2)).*(1+N1) ...
  .*omegal.*tau0+3.*s.*tau0)+4.*exp(1).^(sqrt(-1).*alpha.*(1+N1)+ ...
  sqrt(-1).*omegal.*tau0+(2+N1).*s.*tau0)+exp(1).^(sqrt(-1).*alpha.* ...
  N1+(sqrt(-1)*(3/2)).*omegal.*tau0+s.*tau0+N1.*s.*tau0).*((-1)+N1)+ ...
  exp(1).^(sqrt(-1).*alpha.*(2+N1)+(sqrt(-1)*(3/2)).*omegal.*tau0+( ...
  1+N1).*s.*tau0).*((-1)+N1)+exp(1).^(sqrt(-1).*alpha.*(1+N1)+(4+N1) ...
  .*s.*tau0).*N1+(-1).*exp(1).^(sqrt(-1).*alpha.*(1+N1)+((sqrt(-1)* ...
  2).*omegal+N1.*s).*tau0).*N1+(-1).*exp(1).^(sqrt(-1).*alpha.*N1+( ...
  sqrt(-1)*(1/2)).*omegal.*tau0+3.*s.*tau0+N1.*s.*tau0).*(1+N1)+(-1) ...
  .*exp(1).^(sqrt(-1).*alpha.*(2+N1)+(sqrt(-1)*(1/2)).*omegal.*tau0+ ...
  (3+N1).*s.*tau0).*(1+N1)).*tau0.*(cos(alpha)+(-1).*cos((1/2).* ...
  omegal.*tau0+sqrt(-1).*s.*tau0)).^(-3).*sin((1/2).*omegal.*tau0+ ...
  sqrt(-1).*s.*tau0)));
    result = abs(x1./us1)^2;
end
